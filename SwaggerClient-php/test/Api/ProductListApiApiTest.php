<?php
/**
 * ProductListApiApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * UMAS API PROD
 *
 * These are UMAS published API availble for third party system consumption.
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.47-SNAPSHOT
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProductListApiApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductListApiApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getAllActiveProducts
     *
     * Retrieve all active applications/access rights for the given user..
     *
     */
    public function testGetAllActiveProducts()
    {
    }

    /**
     * Test case for getProductForUser
     *
     * Check if a specific product is active for the given user and retrieve the product information.
     *
     */
    public function testGetProductForUser()
    {
    }

    /**
     * Test case for putProductList
     *
     * Update/add access rights for users. Multiple users and access rights can be updated in one PUT call. The productID must match the existing product ID created in UMAS. The brands must match the available brands by an application. Access rights can only be updated when the duration extends the current set duration..
     *
     */
    public function testPutProductList()
    {
    }
}
